// Generated by CodiumAI

import { Pet } from "src/infra/schema/pet.schema";
import IRepository from "src/shared/interface/repository.interface";
import IPet from "./pet.entity";
import PetService from "./pet.service";

describe('PetService', () => {

    // PetService can create a new pet with valid data
    it('should create a new pet with valid data', async () => {
      // Arrange
      const petData: IPet = {
        name: 'Toby',
        species: 'Dog',
        breed: 'Golden Retriever',
        user: '663a92098ad9c6544267fcaf',
        plan: '55567Aad9c6544267fcaf',
        age: 12,
        photoUrl: 'https://www.photo.com',
        description: 'Here`s a real cute dog',
      } as any as IPet;

      const repositoryMock: IRepository<Pet> = {
        create: jest.fn().mockResolvedValue(petData),
        findAll: jest.fn(),
        findBy: jest.fn(),
        findOne: jest.fn(),
        findOneBy: jest.fn(),
        remove: jest.fn(),
        update: jest.fn(),
      };

      const petService = new PetService(repositoryMock);

      // Act
      const result = await petService.create(petData);

      // Assert
      expect(result).toEqual(petData);
      expect(repositoryMock.create).toHaveBeenCalledWith(petData);
    });
});
